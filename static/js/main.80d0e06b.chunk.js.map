{"version":3,"sources":["audio/007-questions.mp3","loading.gif","audio/feedback.mp3","audio/ranking.mp3","actions/index.js","reducers/user.js","reducers/token.js","reducers/game.js","reducers/index.js","store/index.js","pages/Login.jsx","pages/Settings.jsx","components/Header.jsx","pages/Questions.jsx","pages/Feedback.jsx","pages/Ranking.jsx","App.js","index.js","audio/007-login.mp3"],"names":["module","exports","questions","results","type","fetchQuestions","token","dispatch","getState","a","async","categorySetting","game","settings","category","difficultySetting","difficulty","typeSetting","fetch","requestQuestions","json","userToken","addCategories","categories","INITIAL_STATE","name","email","user","state","action","hash","gravatar","score","assertions","ranking","options","id","alternativesType","picture","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","Login","isPlaying","handleChange","bind","onClick","play","event","preventDefault","this","props","myUser","hashGravatar","requestToken","CryptoJs","MD5","toString","target","setState","value","isEnable","disabled","className","htmlFor","data-testid","onChange","to","size","autoPlay","loop","src","LoginSound","volume","React","Component","connect","userInfo","userHash","localStorage","setItem","Settings","requestCategories","confirm","map","item","key","categoriesObject","trivia_categories","saveSettings","Header","alt","Questions","myChoice","timer","nextQuestion","resetState","questionNumber","answered","isShuffle","shuffledAnswers","time","startTimer","setInfoOnLocalStorage","playerInfo","JSON","stringify","player","gravatarEmail","prev","answer","correct_answer","pointsCalc","clearInterval","intervalID","buttonClass","string","replace","answers","dataIdIndex","index","class","shift","fixChars","array","sort","Math","random","answersBeforeShuffle","incorrect_answers","shuffle","question","alternatives","setInterval","sumPoints","level","Loading","width","QuestionsSound","hidden","points","Feedback","reset","FeedbackSound","feedScore","addRanking","Ranking","RankingSound","b","eachRanking","App","path","component","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.80d0e06b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/007-questions.f14e07e7.mp3\";","module.exports = __webpack_public_path__ + \"static/media/loading.58607b10.gif\";","module.exports = __webpack_public_path__ + \"static/media/feedback.37746763.mp3\";","module.exports = __webpack_public_path__ + \"static/media/ranking.ec382311.mp3\";","export const ADD_USER = 'ADD_USER';\nexport const USER_HASH = 'USER_HASH';\nexport const USER_TOKEN = 'USER_TOKEN';\nexport const NEW_QUESTIONS = 'NEW_QUESTIONS';\nexport const SUM_POINTS = 'SUM_POINTS';\nexport const RESET_GAME = 'RESET_GAME';\nexport const ADD_RANKING = 'ADD_RANKING';\nexport const ADD_CATEGORIES = 'ADD_CATEGORIES';\nexport const SAVE_SETTINGS = 'SAVE_SETTINGS';\n\nconst tokenAPI = 'https://opentdb.com/api_token.php?command=request';\nconst questionsAPI = 'https://opentdb.com/api.php?amount=5';\nconst categoriesAPI = 'https://opentdb.com/api_category.php';\n\nexport const userInfo = (name, email) => ({\n  type: ADD_USER,\n  name,\n  email,\n});\n\nexport const userHash = (hash) => ({\n  type: USER_HASH,\n  hash,\n});\n\nexport const questions = (results) => ({\n  type: NEW_QUESTIONS,\n  results,\n});\n\nexport const fetchQuestions = (token) => async (dispatch, getState) => {\n  const categorySetting = (getState().game.settings.category === 'Any Category')\n    ? '' : `&category=${getState().game.settings.category}`;\n  const difficultySetting = (getState().game.settings.difficulty === 'Any Difficulty')\n    ? '' : `&difficulty=${getState().game.settings.difficulty}`;\n  const typeSetting = (getState().game.settings.type === 'Any Type')\n    ? '' : `&type=${getState().game.settings.type}`;\n\n  const requestQuestions = await fetch(`\n    ${questionsAPI}${categorySetting}${difficultySetting}${typeSetting}&token=${token}\n  `);\n  const results = await requestQuestions.json();\n  return dispatch(questions(results));\n};\n\nexport const userToken = (token) => ({\n  type: USER_TOKEN,\n  token,\n});\n\nexport const fetchToken = () => async (dispatch) => {\n  const requestToken = await fetch(tokenAPI);\n  const token = await requestToken.json();\n  localStorage.setItem('token', token.token);\n  await dispatch(userToken(token.token));\n  return dispatch(fetchQuestions(token.token));\n};\n\nexport const sumNewPoints = (score) => ({\n  type: SUM_POINTS,\n  score,\n});\n\nexport const resetGame = () => ({\n  type: RESET_GAME,\n});\n\nexport const addRanking = (name, hash) => ({\n  type: ADD_RANKING,\n  name,\n  hash,\n});\n\nexport const addCategories = (categories) => ({\n  type: ADD_CATEGORIES,\n  categories,\n});\n\nexport const fetchCategories = () => async (dispatch) => {\n  const requestCategories = await fetch(categoriesAPI);\n  const categoriesObject = await requestCategories.json();\n  const categories = categoriesObject.trivia_categories.map((category) => category);\n  return dispatch(addCategories(categories));\n};\n\nexport const saveSettings = (category, difficulty, alternativesType) => ({\n  type: SAVE_SETTINGS,\n  category,\n  difficulty,\n  alternativesType,\n});\n","import { ADD_USER } from '../actions';\n\nconst INITIAL_STATE = {\n  name: '',\n  email: '',\n};\n\nfunction user(state = INITIAL_STATE, action) {\n  switch (action.type) {\n  case ADD_USER:\n    return { ...state, name: action.name, email: action.email };\n  default:\n    return state;\n  }\n}\n\nexport default user;\n","import { USER_HASH, USER_TOKEN } from '../actions';\n\nconst INITIAL_STATE = {\n  hash: '',\n  token: '',\n};\n\nfunction gravatar(state = INITIAL_STATE, action) {\n  switch (action.type) {\n  case USER_HASH:\n    return { ...state, hash: action.hash };\n  case USER_TOKEN:\n    return { ...state, token: action.token };\n  default:\n    return state;\n  }\n}\n\nexport default gravatar;\n","import { NEW_QUESTIONS,\n  SUM_POINTS,\n  RESET_GAME,\n  ADD_RANKING,\n  ADD_CATEGORIES,\n  SAVE_SETTINGS,\n} from '../actions';\n\nconst INITIAL_STATE = {\n  results: [],\n  score: 0,\n  assertions: 0,\n  ranking: [],\n  settings: {\n    category: 'Any Category',\n    difficulty: 'Any Difficulty',\n    type: 'Any Type',\n  },\n  options: {\n    categories: ['Loading...'],\n    difficulty: [\n      { id: 0, name: 'Any Difficulty' },\n      { id: 'easy', name: 'Easy' },\n      { id: 'medium', name: 'Medium' },\n      { id: 'hard', name: 'Hard' }],\n    type: [\n      { id: 0, name: 'Any Type' },\n      { id: 'multiple', name: 'Multiple Choice' },\n      { id: 'boolean', name: 'True / False' }],\n  },\n};\n\nfunction game(state = INITIAL_STATE, action) {\n  switch (action.type) {\n  case NEW_QUESTIONS:\n    return { ...state, results: action.results.results };\n  case SUM_POINTS:\n    return {\n      ...state,\n      score: state.score + action.score,\n      assertions: state.assertions + 1,\n    };\n  case RESET_GAME:\n    return { ...state, score: 0, assertions: 0, results: [] };\n  case ADD_CATEGORIES:\n    return {\n      ...state,\n      options: {\n        ...state.options,\n        categories: [{ id: 0, name: 'Any Category' }, ...action.categories],\n      },\n    };\n  case SAVE_SETTINGS:\n    return {\n      ...state,\n      settings: {\n        category: action.category,\n        difficulty: action.difficulty,\n        type: action.alternativesType,\n      },\n    };\n  case ADD_RANKING:\n    return { ...state,\n      ranking: [\n        ...state.ranking,\n        { name: action.name, score: state.score, picture: `https://www.gravatar.com/avatar/${action.hash}` },\n      ] };\n  default:\n    return state;\n  }\n}\n\nexport default game;\n","import { combineReducers } from 'redux';\nimport user from './user';\nimport token from './token';\nimport game from './game';\n\nconst rootReducer = combineReducers({ user, token, game });\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n\nexport default store;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport CryptoJs from 'crypto-js';\nimport { Link } from 'react-router-dom';\nimport './Login.css';\nimport { GoSettings } from 'react-icons/go';\nimport { AiFillPlayCircle } from 'react-icons/ai';\nimport { MdVolumeOff, MdVolumeUp } from 'react-icons/md';\nimport ReactAudioPlayer from 'react-audio-player';\nimport LoginSound from '../audio/007-login.mp3';\nimport { userHash, userInfo, fetchToken } from '../actions';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      email: '',\n      name: '',\n      isPlaying: true,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.onClick = this.onClick.bind(this);\n    this.play = this.play.bind(this);\n  }\n\n  onClick(event) {\n    event.preventDefault();\n    const { name, email } = this.state;\n    const { myUser, hashGravatar, requestToken } = this.props;\n    const hash = CryptoJs.MD5(email).toString();\n    myUser(name, email);\n    hashGravatar(hash);\n    requestToken();\n  }\n\n  handleChange({ target }) {\n    this.setState({ [target.name]: target.value });\n  }\n\n  play() {\n    const { isPlaying } = this.state;\n    this.setState({ isPlaying: !isPlaying });\n  }\n\n  render() {\n    const { name, email, isPlaying } = this.state;\n    const isEnable = !((name && email));\n    let disabled = '';\n    if (isEnable) disabled = 'disabled';\n    return (\n      <div className=\"form-wrap\">\n        <form className=\"login-form\">\n          <div className=\"wrap-600\">\n            <h1>Trivia Game</h1>\n            <label htmlFor=\"email\">\n              Email do Gravatar:\n              <input\n                id=\"email\"\n                type=\"email\"\n                name=\"email\"\n                value={ email }\n                data-testid=\"input-gravatar-email\"\n                onChange={ this.handleChange }\n              />\n            </label>\n            <label htmlFor=\"name\">\n              Nome do Jogador:\n              <input\n                id=\"name\"\n                type=\"text\"\n                name=\"name\"\n                value={ name }\n                data-testid=\"input-player-name\"\n                onChange={ this.handleChange }\n              />\n            </label>\n            <div>\n              <button\n                type=\"button\"\n                data-testid=\"btn-play\"\n                disabled={ isEnable }\n                onClick={ this.onClick }\n                className=\"bt_login\"\n              >\n                <Link to=\"/game\" className={ `bt-jogar ${disabled}` }>\n                  <AiFillPlayCircle size=\"50\" />\n                </Link>\n              </button>\n              <Link to=\"/settings\">\n                <button\n                  type=\"button\"\n                  data-testid=\"btn-settings\"\n                  className=\"bt_login\"\n                >\n                  <GoSettings size=\"50\" />\n                </button>\n              </Link>\n              <button type=\"button\" className=\"bt_login\" onClick={ this.play }>\n                {(isPlaying) ? <MdVolumeUp size=\"50\" /> : <MdVolumeOff size=\"50\" />}\n                {(isPlaying)\n                  ? <ReactAudioPlayer autoPlay loop src={ LoginSound } volume={ 0.5 } />\n                  : null}\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  myUser: (name, email) => dispatch(userInfo(name, email)),\n  hashGravatar: (hash) => dispatch(userHash(hash)),\n  requestToken: () => dispatch(fetchToken()),\n});\n\nLogin.propTypes = {\n  myUser: PropTypes.func.isRequired,\n  hashGravatar: PropTypes.func.isRequired,\n  requestToken: PropTypes.func.isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(Login);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport ReactAudioPlayer from 'react-audio-player';\nimport { saveSettings, fetchCategories } from '../actions';\nimport LoginSound from '../audio/007-login.mp3';\n\nclass Settings extends React.Component {\n  constructor(props) {\n    super(props);\n    const { category, difficulty, type } = props;\n    this.handleChange = this.handleChange.bind(this);\n\n    this.state = {\n      category,\n      difficulty,\n      type,\n    };\n  }\n\n  componentDidMount() {\n    const { requestCategories } = this.props;\n    requestCategories();\n  }\n\n  handleChange({ target }) {\n    this.setState({\n      [target.id]: target.value,\n    });\n  }\n\n  render() {\n    const { options, confirm } = this.props;\n    const { category, difficulty, type } = this.state;\n    return (\n      <div className=\"content-wrap\">\n        <ReactAudioPlayer autoPlay loop src={ LoginSound } volume={ 0.5 } />\n        <h1 data-testid=\"settings-title\">CONFIGURAÇÕES</h1>\n        <label htmlFor=\"categories\">\n          <select id=\"category\" onChange={ this.handleChange } value={ category }>\n            {options.categories.map((item) => (\n              <option key={ item.id } value={ item.id }>\n                { item.name }\n              </option>))}\n          </select>\n        </label>\n        <label htmlFor=\"difficulty\">\n          <select id=\"difficulty\" onChange={ this.handleChange } value={ difficulty }>\n            {options.difficulty.map((item) => (\n              <option key={ item.id } value={ item.id }>\n                { item.name }\n              </option>))}\n          </select>\n        </label>\n        <label htmlFor=\"type\">\n          <select id=\"type\" onChange={ this.handleChange } value={ type }>\n            {options.type.map((item) => (\n              <option key={ item.id } value={ item.id }>\n                { item.name }\n              </option>))}\n          </select>\n        </label>\n        <div className=\"buttons_settings\">\n          <button className=\"bt_margin\" type=\"button\" onClick={ () => confirm(category, difficulty, type) }>\n          Confirmar\n          </button>\n          <Link to=\"/\"><button type=\"button\">Voltar</button></Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  options: state.game.options,\n  category: state.game.settings.category,\n  difficulty: state.game.settings.difficulty,\n  type: state.game.settings.type,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  requestCategories: () => dispatch(fetchCategories()),\n  confirm: (category, difficulty, type) => (\n    dispatch(saveSettings(category, difficulty, type))),\n});\n\nSettings.propTypes = {\n  options: PropTypes.objectOf().isRequired,\n  requestCategories: PropTypes.func.isRequired,\n  confirm: PropTypes.func.isRequired,\n  category: PropTypes.string.isRequired,\n  difficulty: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport './Header.css';\n\nclass Header extends React.Component {\n  render() {\n    const { hash, name, score } = this.props;\n    return (\n      <header className=\"app-header\">\n        <img\n          data-testid=\"header-profile-picture\"\n          src={ `https://www.gravatar.com/avatar/${hash}` }\n          alt=\"foto perfil\"\n        />\n        <span data-testid=\"header-player-name\">\n          { name }\n        </span>\n        <span className=\"header-score\" data-testid=\"header-score\">\n          {score}\n        </span>\n      </header>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  hash: state.token.hash,\n  name: state.user.name,\n  score: state.game.score,\n});\n\nHeader.propTypes = {\n  hash: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  score: PropTypes.number.isRequired,\n};\n\nexport default connect(mapStateToProps)(Header);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport ReactAudioPlayer from 'react-audio-player';\nimport Header from '../components/Header';\nimport { sumNewPoints } from '../actions';\nimport './Questions.css';\nimport QuestionsSound from '../audio/007-questions.mp3';\nimport Loading from '../loading.gif';\n\nconst INITIAL_TIME = 30;\n\nclass Questions extends React.Component {\n  constructor() {\n    super();\n    this.myChoice = this.myChoice.bind(this);\n    this.timer = this.timer.bind(this);\n    this.nextQuestion = this.nextQuestion.bind(this);\n    this.resetState = this.resetState.bind(this);\n\n    this.state = {\n      questionNumber: 0,\n      answered: false,\n      isShuffle: false,\n      shuffledAnswers: [],\n      time: INITIAL_TIME,\n    };\n  }\n\n  componentDidMount() {\n    const { questionNumber } = this.state;\n    if (questionNumber === 0) this.startTimer();\n    this.setInfoOnLocalStorage();\n  }\n\n  componentDidUpdate() {\n    this.setInfoOnLocalStorage();\n  }\n\n  setInfoOnLocalStorage() {\n    const { name, email, score, assertions } = this.props;\n    const playerInfo = JSON.stringify({ player: {\n      name,\n      assertions,\n      score,\n      gravatarEmail: email,\n    } });\n    localStorage.setItem('state', playerInfo);\n  }\n\n  timer() {\n    const { time } = this.state;\n    if (time === 0) {\n      this.setState({\n        answered: true,\n      });\n    } else {\n      this.setState((prev) => ({\n        time: prev.time - 1,\n      }));\n    }\n  }\n\n  myChoice({ target }) {\n    const { results } = this.props;\n    const { questionNumber } = this.state;\n    const answer = target.value;\n    this.setState({\n      answered: true,\n    });\n    if (answer === results[questionNumber].correct_answer) this.pointsCalc();\n    clearInterval(this.intervalID);\n  }\n\n  class(answer) {\n    const { answered, questionNumber } = this.state;\n    const { results } = this.props;\n    let buttonClass = 'answer';\n    if (answered) {\n      buttonClass = (answer === results[questionNumber].correct_answer)\n        ? 'correct'\n        : 'incorrect';\n    }\n    return buttonClass;\n  }\n\n  fixChars(string) {\n    return string\n      .replace(/&quot;/g, '\"')\n      .replace(/&#039;/g, '\\'')\n      .replace(/&eacute;/g, 'é');\n  }\n\n  alternatives(answers, results) {\n    const dataIdIndex = [0, 1, 2];\n    const { questionNumber, answered } = this.state;\n    return (\n      <div className=\"alternatives\">\n        {answers.map((answer, index) => (\n          <button\n            key={ index }\n            type=\"button\"\n            value={ answer }\n            className={ this.class(answer) }\n            disabled={ answered }\n            data-testid={\n              (answer === results[questionNumber].correct_answer)\n                ? 'correct-answer'\n                : `wrong-answer-${dataIdIndex.shift()}`\n            }\n            onClick={ this.myChoice }\n          >\n            { this.fixChars(answer) }\n          </button>\n        ))}\n      </div>\n    );\n  }\n\n  shuffle(array) {\n    const { isShuffle } = this.state;\n    const FIFTY_PERCENT = 0.5;\n    const shuffledAnswers = array.sort(() => Math.random() - FIFTY_PERCENT); // https://javascript.info/task/shuffle\n    if (!isShuffle) this.setState({ shuffledAnswers, isShuffle: true });\n  }\n\n  question() {\n    const { results } = this.props;\n    const { answered, shuffledAnswers, questionNumber, time } = this.state;\n    const answersBeforeShuffle = [\n      results[questionNumber].correct_answer,\n      ...results[questionNumber].incorrect_answers,\n    ];\n    if (!answered) this.shuffle(answersBeforeShuffle);\n    return (\n      <>\n        <Header />\n        <h3 data-testid=\"question-category\">\n          {`Category: ${this.fixChars(results[questionNumber].category)}`}\n        </h3>\n        <h2 data-testid=\"question-text\">\n          {`Question: ${this.fixChars(results[questionNumber].question)}`}\n        </h2>\n        {this.alternatives(shuffledAnswers, results)}\n        <div className=\"timer\"><p>{time}</p></div>\n      </>\n    );\n  }\n\n  startTimer() {\n    const ONE_SECOND = 1000;\n    this.intervalID = setInterval(this.timer, ONE_SECOND);\n  }\n\n  pointsCalc() {\n    const { sumPoints, results } = this.props;\n    const { time, questionNumber } = this.state;\n    const QUESTION_POINT = 10;\n    const level1 = 1;\n    const level2 = 2;\n    const level3 = 3;\n    let level = 0;\n    if (results[questionNumber].difficulty === 'easy') level = level1;\n    if (results[questionNumber].difficulty === 'medium') level = level2;\n    if (results[questionNumber].difficulty === 'hard') level = level3;\n    const points = (QUESTION_POINT + (time * level));\n    sumPoints(points);\n  }\n\n  nextQuestion() {\n    const { questionNumber } = this.state;\n    this.setState({\n      questionNumber: questionNumber + 1,\n      answered: false,\n      isShuffle: false,\n      time: INITIAL_TIME,\n    });\n    this.startTimer();\n  }\n\n  resetState() {\n    this.setState({\n      questionNumber: 0,\n      answered: false,\n      isShuffle: false,\n      shuffledAnswers: [],\n      time: INITIAL_TIME,\n    });\n  }\n\n  render() {\n    const { results } = this.props;\n    const { answered, questionNumber } = this.state;\n    const NUMBER_OF_QUESTIONS = 5;\n    return (\n      <div className=\"content-wrap\">\n        {(questionNumber === NUMBER_OF_QUESTIONS) ? <Redirect to=\"/feedback\" /> : null}\n        {(questionNumber === NUMBER_OF_QUESTIONS) ? this.resetState() : null}\n        {(results[questionNumber])\n          ? this.question()\n          : <img src={ Loading } width=\"50%\" alt=\"Loading\" />}\n        <ReactAudioPlayer autoPlay loop src={ QuestionsSound } volume={ 0.5 } />\n        <button\n          type=\"button\"\n          disabled={ !answered }\n          hidden={ !answered }\n          data-testid=\"btn-next\"\n          onClick={ this.nextQuestion }\n        >\n          Próxima\n        </button>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  results: state.game.results,\n  name: state.user.name,\n  email: state.user.email,\n  score: state.game.score,\n  assertions: state.game.assertions,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  sumPoints: (points) => dispatch(sumNewPoints(points)),\n});\n\nQuestions.propTypes = {\n  results: PropTypes.arrayOf(PropTypes.object).isRequired,\n  sumPoints: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  score: PropTypes.number.isRequired,\n  assertions: PropTypes.number.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Questions);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport ReactAudioPlayer from 'react-audio-player';\nimport Header from '../components/Header';\nimport { resetGame, addRanking } from '../actions';\nimport FeedbackSound from '../audio/feedback.mp3';\n\nclass Feedback extends React.Component {\n  componentDidMount() {\n    const { ranking, name, hash } = this.props;\n    ranking(name, hash);\n  }\n\n  feedScore() {\n    const { assertions } = this.props;\n    const MIN_QUESTIONS = 3;\n    if (assertions < MIN_QUESTIONS) {\n      return (\n        <h1 data-testid=\"feedback-text\">Podia ser melhor...</h1>\n      );\n    }\n    return (\n      <h1 data-testid=\"feedback-text\">Mandou bem!</h1>\n    );\n  }\n\n  render() {\n    const { assertions, score, reset } = this.props;\n    return (\n      <div className=\"content-wrap\">\n        <ReactAudioPlayer autoPlay src={ FeedbackSound } volume={ 0.5 } />\n        <div>\n          <Header />\n        </div>\n        <div>\n          {this.feedScore()}\n          <h3>\n            Você acertou\n            {' '}\n            <span data-testid=\"feedback-total-question\">{assertions}</span>\n            {' '}\n            questões!\n            <br />\n            Um total de\n            {' '}\n            <span data-testid=\"feedback-total-score\">{score}</span>\n            {' '}\n            pontos\n          </h3>\n        </div>\n        <Link to=\"/ranking\">\n          <button\n            type=\"button\"\n            data-testid=\"btn-ranking\"\n            onClick={ reset }\n            className=\"bt_margin\"\n          >\n            VER RANKING\n          </button>\n        </Link>\n        <Link to=\"/\">\n          <button\n            type=\"button\"\n            data-testid=\"btn-play-again\"\n            onClick={ reset }\n          >\n           JOGAR NOVAMENTE\n          </button>\n        </Link>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  score: state.game.score,\n  assertions: state.game.assertions,\n  name: state.user.name,\n  hash: state.token.hash,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  reset: () => dispatch(resetGame()),\n  ranking: (name, hash) => dispatch(addRanking(name, hash)),\n});\n\nFeedback.propTypes = {\n  score: PropTypes.number.isRequired,\n  assertions: PropTypes.number.isRequired,\n  reset: PropTypes.func.isRequired,\n  ranking: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  hash: PropTypes.string.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Feedback);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport ReactAudioPlayer from 'react-audio-player';\nimport RankingSound from '../audio/ranking.mp3';\n\nclass Ranking extends React.Component {\n  render() {\n    const { ranking } = this.props;\n    return (\n      <div className=\"content-wrap\">\n        <ReactAudioPlayer autoPlay src={ RankingSound } volume={ 0.5 } />\n        <h1 data-testid=\"ranking-title\">Ranking</h1>\n        {ranking\n          .sort((a, b) => b.score - a.score)\n          .map((eachRanking, index) => (\n            <div key={ index } className=\"wrap-player-ranking\">\n              <img src={ eachRanking.picture } alt=\"esquilo\" className=\"img-ranking\" />\n              <p data-testid={ `player-name-${index}` }>{eachRanking.name}</p>\n              <p className=\"rank-score\" data-testid={ `player-score-${index}` }>{eachRanking.score}</p>\n            </div>\n          ))}\n        <Link to=\"/\">\n          <button type=\"button\" data-testid=\"btn-go-home\">JOGAR NOVAMENTE</button>\n        </Link>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  ranking: state.game.ranking,\n});\n\nRanking.propTypes = {\n  ranking: PropTypes.string.isRequired,\n};\n\nexport default connect(mapStateToProps)(Ranking);\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Login from './pages/Login';\nimport Settings from './pages/Settings';\nimport Questions from './pages/Questions';\nimport Feedback from './pages/Feedback';\nimport Ranking from './pages/Ranking';\nimport './App.css';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Switch>\n        <Route path=\"/settings\" component={ Settings } />\n        <Route path=\"/game\" component={ Questions } />\n        <Route path=\"/feedback\" component={ Feedback } />\n        <Route path=\"/ranking\" component={ Ranking } />\n        <Route exact path=\"/\" component={ Login } />\n      </Switch>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={ store }>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n","module.exports = __webpack_public_path__ + \"static/media/007-login.dd07c461.mp3\";"],"sourceRoot":""}